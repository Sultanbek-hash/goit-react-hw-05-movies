{"version":3,"file":"static/js/413.c5ebbf17.chunk.js","mappings":"+SACMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAuB,gCAGhB,IAAMC,EAAW,mCAAG,oGACAD,EAAAA,EAAAA,IAAA,qCAAwCD,IADxC,cACjBG,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACDL,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,iCAAkEM,EAAlE,gCADC,cAClBH,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZG,EAAgB,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCR,EAAjC,oBADK,cACtBG,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKhBK,EAAe,mCAAG,WAAMD,GAAN,uFACJP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,oBADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,2BADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qD,8ICjB1B,EANiB,SAAC,GAAD,IAAGO,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACf,iBAAMC,UAAU,OAAOF,SAAUA,EAAjC,SACGC,GAFY,ECWnB,EAboB,kBAChB,kBACAC,UAAU,QACVC,KAAK,OACLC,KAAK,YACLC,QAAQ,yHACRC,MAAM,0EACNC,UAAQ,EACRC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAVI,ECKPC,EAAY,SAAC,GAAD,IAAEX,EAAF,EAAEA,SAAF,OACrB,0BACI,UAAC,EAAD,CAAYA,SAAUA,EAAtB,WACI,SAAC,EAAD,KACA,mBAAQE,UAAU,aAAaC,KAAK,SAAS,aAAW,gBAAxD,UACI,SAAC,MAAD,UALS,ECuDzB,EAvDe,WAAM,IAAD,EACVS,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,oBAApB,QAAoC,GACnD,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACW,KAAdT,IAGHI,EAAc,IACdE,GAAa,IAEb7B,EAAAA,EAAAA,IAAauB,GAAWU,MAAK,SAAAlC,GACzB,IAAKA,EAAKmC,QAAQC,OAGhB,OAFAN,GAAa,GACbE,GAAS,GACFK,QAAQC,IACb,2DAGJN,GAAS,GACTJ,EAAc5B,EAAKmC,SACnBL,GAAa,EACd,IACN,GAAE,CAACN,IAQJ,OACI,iBAAKf,UAAU,YAAf,WACI,SAACS,EAAD,CAAWX,SARE,SAAAgC,GACjBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,cACrBnB,EAAgB,CAAEC,UAAWiB,EAAWE,SAASnB,UAAUoB,QAC3DH,EAAWI,OACZ,IAIMd,IAAS,uBAAG,6DACb,0BACCJ,EAAWmB,KAAI,SAAAC,GAClB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAM3C,IAAM6C,MAAO,CAAEC,KAAM/B,GAAhD,SACG4B,EAAMI,gBAAkBJ,EAAMpC,QAF1BoC,EAAM3C,GAMlB,IACAyB,IAAa,SAACuB,EAAA,EAAD,SAIrB,C","sources":["components/Servise/GetApiMovies.js","components/SearchBar/SearchForm.js","components/SearchBar/SearchInput.js","components/SearchBar/SearchBar.js","components/path/to/pages/Movies.js"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY = '5e76563aecd028d7cd0b8d124dfe726a';\naxios.defaults.baseURL='https://api.themoviedb.org/3/';\n\n\nexport const GetTrending = async() => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport const searchMovies = async query =>{\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data;\n};\n\nexport const getMoviesDetails = async id =>{\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const getMovieCredits = async id => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const getMovieReviews = async id => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n};\n","import PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit, children }) => (\n    <form className='Form' onSubmit={onSubmit}>\n      {children}\n      </form>\n  );\n  \n  export default SearchForm;\n  \n  SearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };","const SearchInput = () => (\n    <input \n    className=\"Input\"\n    type=\"text\"\n    name=\"movieName\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"May contain only letters, apostrophe, dash and spaces. For example moon\"\n    required\n    autoComplete=\"off\"\n    autoFocus\n    placeholder=\"Search movie...\"\n    />\n);\nexport default SearchInput;","import { BsSearch } from 'react-icons/bs';\nimport SearchForm from './SearchForm';\nimport SearchInput from './SearchInput';\nimport PropTypes from 'prop-types';\n\nexport const SearchBar = ({onSubmit}) => (\n    <div>\n        <SearchForm onSubmit={onSubmit}>\n            <SearchInput/>\n            <button className='buttonIcon' type='submit' aria-label='search button'>\n                <BsSearch />\n            </button>\n        </SearchForm>\n    </div>\n);\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };","import { Loader } from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { searchMovies } from 'components/Servise/GetApiMovies';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nconst Movies = () =>{\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieName = searchParams.get('movieName') ?? '';\n    const [moviesList, setMoviesList] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() =>{\n        if(movieName === ''){\n            return;\n        }\n        setMoviesList([]);\n        setIsLoading(true);\n\n        searchMovies(movieName).then(data => {\n            if (!data.results.length) {\n              setIsLoading(false);\n              setError(true);\n              return console.log(\n                'There is no movies with this request. Please, try again'\n              );\n            }\n            setError(false);\n            setMoviesList(data.results);\n            setIsLoading(false);\n          });\n    }, [movieName]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const searchForm = e.currentTarget;\n        setSearchParams({ movieName: searchForm.elements.movieName.value });\n        searchForm.reset();\n      };\n    return (\n        <div className='container'>\n            <SearchBar onSubmit={handleSubmit} />\n            {error && <p>There is no movies with this request. Please, try again</p>}\n            <ul>\n            {moviesList.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.original_title || movie.name}\n              </Link>\n            </li>\n          );\n        })}\n        {isLoading && <Loader />}\n            </ul>\n        </div>\n    )\n}\n\nexport default Movies;"],"names":["API_KEY","axios","GetTrending","response","data","searchMovies","query","getMoviesDetails","id","getMovieCredits","getMovieReviews","onSubmit","children","className","type","name","pattern","title","required","autoComplete","autoFocus","placeholder","SearchBar","location","useLocation","useSearchParams","searchParams","setSearchParams","movieName","get","useState","moviesList","setMoviesList","isLoading","setIsLoading","error","setError","useEffect","then","results","length","console","log","e","preventDefault","searchForm","currentTarget","elements","value","reset","map","movie","to","state","from","original_title","Loader"],"sourceRoot":""}