{"version":3,"file":"static/js/195.0ebc8777.chunk.js","mappings":"+SACMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAuB,gCAGhB,IAAMC,EAAW,mCAAG,oGACAD,EAAAA,EAAAA,IAAA,qCAAwCD,IADxC,cACjBG,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACDL,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,iCAAkEM,EAAlE,gCADC,cAClBH,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZG,EAAgB,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCR,EAAjC,oBADK,cACtBG,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKhBK,EAAe,mCAAG,WAAMD,GAAN,uFACJP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,oBADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,2BADI,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qD,wGCiD5B,UArEqB,WAAO,IAAD,IACvB,GAAsCO,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAAXD,SAEPE,EAAAA,EAAAA,YAAU,YACNX,EAAAA,EAAAA,IAAiBS,GAChBG,MAAK,SAAAf,GAAI,OAAIS,EAAeT,EAAnB,GACb,GAAE,CAACY,IAEJ,IAAQI,EACRR,EADQQ,eAAgBC,EACxBT,EADwBS,SAAUC,EAClCV,EADkCU,OAAQC,EAC1CX,EAD0CW,YAGpCC,GADuB,GAD7BZ,EADuDa,cAG5BC,QAAQ,GACnC,OACI,iBAAKC,UAAU,YAAf,WACI,mBAASA,UAAU,SAASC,KAAK,SAAjC,UACI,UAAC,KAAD,CAAMD,UAAU,WAAWE,GAAE,oBAAEf,EAASgB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAvD,WACI,SAAC,MAAD,CAAmBC,KAAM,KAAK,gBAItC,gBAAKL,UAAU,WAAf,UACI,gBACAM,IACAV,EAAW,yCACuBA,GADvB,+CAIjBW,MAAO,IACPC,OAAQ,IACRC,QAAQ,OACRC,IAAI,cAGF,iBAAKV,UAAU,YAAf,WACI,eAAIA,UAAU,QAAd,SAAuBP,KACvB,0BAAI,eAAaI,EAAa,QAC9B,wBAAI,cACJ,uBAAIH,KACJ,wBAAI,YACJ,eAAIM,UAAU,aAAd,SACKL,GACAA,EAAOgB,QACPhB,EAAOiB,KAAI,gBAAE/B,EAAF,EAAEA,GAAIgC,EAAN,EAAMA,KAAN,OAAgB,wBAAcA,GAALhC,EAAzB,UAIpB,iBAAKmB,UAAU,UAAf,WACI,wBAAI,4BACJ,0BACI,yBACI,SAAC,KAAD,CAAME,GAAG,OAAOC,OAAK,UAAMhB,EAASgB,OAApC,SAA4C,YAIhD,0BACK,KACD,SAAC,KAAD,CAAMD,GAAG,UAAUC,OAAK,UAAMhB,EAASgB,OAAvC,SAA+C,sBAM3D,SAAC,KAAD,MAGX,C","sources":["components/Servise/GetApiMovies.js","components/path/to/pages/MovieDetails.js"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY = '5e76563aecd028d7cd0b8d124dfe726a';\naxios.defaults.baseURL='https://api.themoviedb.org/3/';\n\n\nexport const GetTrending = async() => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport const searchMovies = async query =>{\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data;\n};\n\nexport const getMoviesDetails = async id =>{\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const getMovieCredits = async id => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const getMovieReviews = async id => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n};\n","import {useParams, useLocation, Link, Outlet} from 'react-router-dom';\nimport { getMoviesDetails } from 'components/Servise/GetApiMovies';  \nimport { useState, useEffect } from 'react';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\n\nconst MovieDetails = () => {\n    const [movieDetail, setMovieDetail] = useState({});\n    const location = useLocation();\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        getMoviesDetails(movieId)\n        .then(data => setMovieDetail(data));\n    }, [movieId]);\n    \n    const { original_title, overview, genres, poster_path, vote_average } =\n    movieDetail;\n    const score = vote_average * 10;\n    const scoreToFixed = score.toFixed(2);\n    return(\n        <div className='container'>\n            <button  className='Button' type='button'>\n                <Link className='LinkBack' to={location.state?.from ?? '/'}>\n                    <HiArrowNarrowLeft size={16}/>\n                    Go back\n                </Link>\n            </button>\n            <div className='MovieBox'>\n                <img \n                src={\n                poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : `http://www.suryalaya.org/images/no_image.jpg`\n          }\n          width={320}\n          height={380}\n          loading='lazy'\n          alt='poster'\n          />\n            </div>\n            <div className='MovieInfo'>\n                <h2 className='Title'>{original_title}</h2>\n                <h3>User score: {scoreToFixed}%</h3>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <ul className='GenresList'>\n                    {genres && \n                     genres.length && \n                     genres.map(({id, name}) => <li key={id}>{name}</li>\n                     )}\n                </ul>\n            </div>\n            <div className='InfoBox'>\n                <h4>Additional information</h4>\n                <u>\n                    <li>\n                        <Link to=\"cast\" state={{...location.state}}>\n                            Cast\n                        </Link>\n                    </li>\n                    <li>\n                        {' '}\n                        <Link to=\"reviews\" state={{...location.state}}>\n                            Reviews\n                        </Link>\n                    </li>\n                </u>\n            </div>\n            <Outlet />\n        </div>\n    )\n}\n\nexport default MovieDetails;"],"names":["API_KEY","axios","GetTrending","response","data","searchMovies","query","getMoviesDetails","id","getMovieCredits","getMovieReviews","useState","movieDetail","setMovieDetail","location","useLocation","movieId","useParams","useEffect","then","original_title","overview","genres","poster_path","scoreToFixed","vote_average","toFixed","className","type","to","state","from","size","src","width","height","loading","alt","length","map","name"],"sourceRoot":""}